# Generated by Django 5.2.1 on 2025-05-18 18:17

import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core_app', '0002_enable_pgcrypto'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('company_name', models.TextField()),
                ('rfc', models.TextField(blank=True, null=True)),
                ('manager_name', models.TextField(blank=True, null=True)),
                ('manager_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('next_payment_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Compañía',
                'verbose_name_plural': 'Compañías',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='ServicePlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plan_name', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_vehicles', models.IntegerField()),
                ('registered_vehicles', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Plan de Servicio',
                'verbose_name_plural': 'Planes de Servicio',
                'db_table': 'service_plans',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('type', models.CharField(choices=[('owner', 'Propietario'), ('admin', 'Administrador'), ('standard', 'Estándar')], max_length=10)),
                ('name', models.TextField()),
                ('last_name', models.TextField()),
                ('phone', models.TextField(blank=True, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('language', models.TextField(blank=True, null=True)),
                ('company_info', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('deleted', models.BooleanField(default=False)),
                ('renewal_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_app.company')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='InvitationCode',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.company')),
                ('used_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invitations_used', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Código de Invitación',
                'verbose_name_plural': 'Códigos de Invitación',
                'db_table': 'invitation_codes',
            },
        ),
        migrations.CreateModel(
            name='Receptor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mac_address', models.CharField(max_length=17, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_app.company')),
            ],
            options={
                'verbose_name': 'Receptor',
                'verbose_name_plural': 'Receptores',
                'db_table': 'receptors',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sensor_identifier', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('receptor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core_app.receptor')),
            ],
            options={
                'verbose_name': 'Sensor',
                'verbose_name_plural': 'Sensores',
                'db_table': 'sensors',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='service_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_app.serviceplan'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alias', models.TextField(blank=True, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('model', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core_app.company')),
            ],
            options={
                'verbose_name': 'Vehículo',
                'verbose_name_plural': 'Vehículos',
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('unique_id', models.UUIDField(blank=True, null=True)),
                ('avg', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, max_digits=10), blank=True, null=True, size=None)),
                ('peak', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('qos', models.IntegerField(blank=True, null=True)),
                ('rpsi', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rtemp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rvolts', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('packet_timestamp', models.DateTimeField(blank=True, null=True)),
                ('topic', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('receptor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_app.receptor')),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core_app.sensor')),
            ],
            options={
                'verbose_name': 'Lectura de Sensor',
                'verbose_name_plural': 'Lecturas de Sensores',
                'db_table': 'sensor_readings',
                'indexes': [models.Index(fields=['receptor'], name='sensor_read_recepto_b7ee25_idx'), models.Index(fields=['sensor'], name='sensor_read_sensor__85d3ba_idx'), models.Index(fields=['created_at'], name='sensor_read_created_8a2007_idx')],
            },
        ),
        migrations.CreateModel(
            name='SensorAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.TextField(blank=True, null=True)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('unassigned_at', models.DateTimeField(blank=True, null=True)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.sensor')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_app.vehicle')),
            ],
            options={
                'verbose_name': 'Asignación de Sensor',
                'verbose_name_plural': 'Asignaciones de Sensores',
                'db_table': 'sensor_assignments',
                'unique_together': {('sensor_id', 'vehicle_id', 'unassigned_at')},
            },
        ),
    ]
